@{
    Model.PreviousText = T("<");
    Model.NextText = T(">");

    var routeData = new RouteValueDictionary(ViewContext.RouteData.Values);
    var queryString = ViewContext.HttpContext.Request.QueryString;
    if (queryString != null) {
        foreach (string key in queryString.Keys) {
            if (key != null && !routeData.ContainsKey(key)) {
                var value = queryString[key];
                routeData[key] = queryString[key];
            }
        }
    }

    if (routeData.ContainsKey("id") && !HasText(routeData["id"])) {
        routeData.Remove("id");
    }

    var totalPageCount = (int)Math.Ceiling((double)Model.TotalItemCount / Model.PageSize);

    Model.Metadata.Type = "Pager_Links";
    IHtmlString pagerLinks = Display(Model);

    Model.Classes.Add("selector");
    var pageSizeTag = Tag(Model, "ul");
	//data-role=\"button\" data-transition=\"slide\"

    if (Model.RouteData != null) {
        foreach (var rd in Model.RouteData.Values) {
            routeData[rd.Key] = rd.Value;
        }
    }

    var pageSizes = new List<int?> { 10, 50, 100 };
    var defaultPageSize = WorkContext.CurrentSite.PageSize;
    if (!pageSizes.Contains(defaultPageSize)) {
        pageSizes.Add(defaultPageSize);
    }
}

@if (Model.TotalItemCount > 1) {
    <div class="pager-footer">        
        @Html.Raw(pagerLinks.ToString().Replace("<ul", "<div data-role=\"controlgroup\" data-type=\"horizontal\" data-mini=\"true\" data-inline=\"true\"").Replace("</ul>", @"</div>").Replace("a href", "a data-role=\"button\" data-transition=\"slide\" href").Replace("<li>", "").Replace("<li class=\"first\">", "").Replace("<li class=\"last\">", "").Replace("</li>", "").Replace("<span>", "<a data-role=\"button\" data-transition=\"slide\">").Replace("</span>", "</a>"))
		@*<span class="page-results" data-role="button" data-mini="true" data-inline="true">@T("{0} - {1} of {2}", (Model.Page - 1) * (int)Model.PageSize + 1, Model.PageSize == 0 ? Model.TotalItemCount : Math.Min(Model.TotalItemCount, (Model.Page) * (int)Model.PageSize), Model.TotalItemCount)</span>*@
    </div>
}